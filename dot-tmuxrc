# Settings: {{{

# # change prefix key
# unbind C-b
# set -g prefix C-c

# Faster command sequence
set -g escape-time 0

# zsh is kinda tight
set -g default-command $SHELL
set -g default-shell $SHELL

# fix copy and paste
set-option -g default-command "reattach-to-user-namespace -l $SHELL"

# look good
set -g default-terminal 'xterm-256color'
set-option -ga terminal-overrides ",xterm-256color:Tc"

# enable mouse
set -g mouse on

# window and split pane start at 1
set -g base-index 1
set -g pane-base-index 1
set -g escape-time 1
set -g renumber-windows on

# highlight window when it has new activity
set -g monitor-activity on
set -g visual-activity on

# increase scrollback lines
set -g history-limit 10000

# }}}

# Key Binding: {{{

# reload config file
unbind r
bind r source-file ~/.tmuxrc

# act like vim
set -g mode-keys vi
set -g status-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
# bind-key -T copy-mode-vi 'y' send -X copy-selection
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'
unbind-key -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X cancel

# easy to remember split pane
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

# resize panes with vim movement keys
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# smart pane switching with awareness of vim splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# }}}

# My StatusLine: {{{

set -g status-bg black
set -g status-fg brightwhite
set -g status-attr default
set -g status-position top
set -g status-interval 1
set -g status-justify left
set -g status-left-length '100'
set -g status-left ' #S  â§‰  '
set -g status-right-length '100'
# set -g status-right '#[bg=black,fg=brightwhite] %m/%d/%y %I:%M #[default]'
set -g status-right ''

# default window title colors
setw -g window-status-fg default
setw -g window-status-bg default
setw -g window-status-attr dim
setw -g window-status-format '#I:#W'

# active window title colors
setw -g window-status-current-fg black
setw -g window-status-current-bg "#ffffff"
setw -g window-status-current-attr default
setw -g window-status-current-format ' #I:#W '

# bell alerted window color
setw -g window-status-bell-bg red
setw -g window-status-bell-fg white
setw -g window-status-bell-attr bright

# content alerted color
# setw -g window-status-activity-bg blue
# setw -g window-status-activity-fg white
# setw -g window-status-activity-attr bright

# }}}

# pane borders
set -g pane-border-fg white
set -g pane-border-bg default
set -g pane-active-border-fg brightblack
set -g pane-active-border-bg default

# command line
set -g message-fg default
set -g message-bg default
set -g message-attr default
